// Package into jar
> File
> Project Structure
> Artifacts
> +
> JAR
> From modules with dependencies
> Select the location of the "Main" class
> OK
> Build
> Build Artifacts
> Build/Clean

* Might have to build/rebuild the project first
* META must be in resources

> cp ~/hbase-examples/out/artifacts/hbase_examples_jar/hbase-examples.jar .
> ls -l
> zip -d hbase-examples.jar META-INF/LICENSE
    > OR open with zip7 and delete the file
> echo $HBASE_HOME

* By default MapReduce jobs deployed to Hadoop do not have access to the HBase classes/

You have to copy the jar file to a location in LocalFileSystem (not into HDFS) and set HADOOP_CLASSPATH variable in hadoop-env.sh file to point the same.

After changing hadoop-env.sh file mapreduce services has to be restarted. - JobTracker - TaskTracker

Note: MapReduce job will look for the classes (jars) in the locations specified in HADOOP_CLASSPATH variable.

> export PATH=$PATH:C:/hadoop-1.7.2/sbin
> $HADOOP_CLASSPATH=`${HBASE_HOME}/bin/hbase mapredcp`:${HBASE_HOME}/conf hadoop jar hbase-examples.jar mapreduce.Main -libjars $(${HBASE_HOME}/ bin/hbase mapredcp | tr ':' ',')

* Building with Maven needs the JAR's packaging explicitly using -libjars

> count 'summary'
> scan 'summary'